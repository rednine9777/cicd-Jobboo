name: Pytest with Docker

on:
  push:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y
    
    - name: Create .env file from secrets
      run: |
        # .env 파일을 시크릿 값으로 생성
        mkdir -p config
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" > config/.env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> config/.env
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> config/.env
        echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> config/.env
        echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> config/.env
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> config/.env

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: my-app:latest

    - name: Start services with Docker Compose
      run: docker-compose up -d

    - name: Run pytest inside the container
      run: |
        # GitHub Actions 환경에서는 TTY가 제공되지 않으므로 -T 플래그 추가 (TTY = 터미널 대화형 환경)
        docker-compose exec -T web pytest -s /app/src/test/ --pythonpath=/app/src/main/goo
