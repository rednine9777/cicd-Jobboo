name: Pytest with Docker

on:
  push:
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        pip install pytest pytest-asyncio  # pytest-asyncio 설치 확인

    - name: Create pytest.ini file
      run: |
        echo "[pytest]" > pytest.ini
        echo "markers = asyncio: mark a test as asyncio" >> pytest.ini  # asyncio 마커 등록

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Create .env file from secrets
      run: |
        mkdir -p config
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" > config/.env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> config/.env
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> config/.env
        echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> config/.env
        echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> config/.env
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> config/.env

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: my-app:latest

    - name: Start services with Docker Compose
      run: docker-compose up -d

    - name: Run pytest inside the container
      run: |
        docker-compose exec -T web pytest -s /app/src/test/  # 모든 테스트 실행
