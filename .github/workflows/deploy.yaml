name: deploy
on: 
  workflow_run:
    workflows: ["Pytest"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Get EC2 Instance ID and Public IP
        id: get_instance
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=job-boo" "Name=instance-state-name,Values=running" --query "Reservations[0].Instances[0].InstanceId" --output text)
          IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "IP=$IP" >> $GITHUB_ENV

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ env.IP }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          port: 22
          # script 대신 commands 사용
          script: |
            # PAT 토큰을 사용하여 Git 인증 설정
            git config --global credential.helper store
            echo "https://${{ secrets.PAT_TOKEN }}:x-oauth-basic@github.com" > ~/.git-credentials

            # GitHub 환경 변수로 오너와 저장소 이름을 추출하여 디렉토리 이름으로 사용
            OWNER=$(echo ${{ github.repository }} | cut -d'/' -f1)
            REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)

            # OWNER-REPO_NAME 디렉토리가 없으면 Git 저장소 클론, 있으면 디렉토리로 이동 후 pull
            if [ ! -d "$OWNER-$REPO_NAME" ]; then
              git clone https://github.com/${{ github.repository }}.git $OWNER-$REPO_NAME
              cd $OWNER-$REPO_NAME
            else
              cd $OWNER-$REPO_NAME
              git pull
            fi

            # 디렉토리 안에서 Docker Compose 빌드 및 서비스 배포
            docker-compose build  # 이미지 빌드
            docker-compose down
            docker-compose up -d
